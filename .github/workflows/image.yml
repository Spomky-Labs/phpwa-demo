name: Build and Push Docker Image to GHCR

on:
  push:
    branches:
      - main
    tags:
      - '*.*.*'
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Normalize image name
        id: normal
        run: echo "NAME=$(echo '${{ env.IMAGE_NAME }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Extract short SHA
        id: sha
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Extract version (if tag)
        if: startsWith(github.ref, 'refs/tags/')
        id: version
        run: |
          VERSION="${GITHUB_REF#refs/tags/}"
          MAJOR=$(echo "$VERSION" | cut -d. -f1)
          MINOR=$(echo "$VERSION" | cut -d. -f2)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "MAJOR=$MAJOR" >> $GITHUB_OUTPUT
          echo "MINOR=$MINOR" >> $GITHUB_OUTPUT

      - name: Set Docker tags
        id: meta
        run: |
          TAGS="${{ steps.normal.outputs.NAME }}:${{ steps.sha.outputs.SHORT_SHA }}"
          
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            TAGS="$TAGS,${{ steps.normal.outputs.NAME }}:latest"
          fi
          
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            TAGS="$TAGS,${{ steps.normal.outputs.NAME }}:${{ steps.version.outputs.VERSION }}"
            TAGS="$TAGS,${{ steps.normal.outputs.NAME }}:${{ steps.version.outputs.MAJOR }}.${{ steps.version.outputs.MINOR }}"
            TAGS="$TAGS,${{ steps.normal.outputs.NAME }}:${{ steps.version.outputs.MAJOR }}"
          fi
          
          echo "tags=$TAGS" >> $GITHUB_OUTPUT

      - name: Build and push image (multi-arch with cache)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
